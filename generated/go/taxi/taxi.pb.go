// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: taxi.proto

package trade

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopupInfo_Status int32

const (
	TopupInfo_REQUESTED TopupInfo_Status = 0 // when the request for a topup has been received by the taxi
	TopupInfo_COMPLETED TopupInfo_Status = 1 // when the reply with a partially signed topup has been delivered to the client
	TopupInfo_SETTLED   TopupInfo_Status = 2 // when the topup has been included in the blockchain
)

// Enum value maps for TopupInfo_Status.
var (
	TopupInfo_Status_name = map[int32]string{
		0: "REQUESTED",
		1: "COMPLETED",
		2: "SETTLED",
	}
	TopupInfo_Status_value = map[string]int32{
		"REQUESTED": 0,
		"COMPLETED": 1,
		"SETTLED":   2,
	}
)

func (x TopupInfo_Status) Enum() *TopupInfo_Status {
	p := new(TopupInfo_Status)
	*p = x
	return p
}

func (x TopupInfo_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopupInfo_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_taxi_proto_enumTypes[0].Descriptor()
}

func (TopupInfo_Status) Type() protoreflect.EnumType {
	return &file_taxi_proto_enumTypes[0]
}

func (x TopupInfo_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopupInfo_Status.Descriptor instead.
func (TopupInfo_Status) EnumDescriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{11, 0}
}

type AddAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetHash string `protobuf:"bytes,1,opt,name=asset_hash,json=assetHash,proto3" json:"asset_hash,omitempty"`
	Ticker    string `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
}

func (x *AddAssetRequest) Reset() {
	*x = AddAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAssetRequest) ProtoMessage() {}

func (x *AddAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAssetRequest.ProtoReflect.Descriptor instead.
func (*AddAssetRequest) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{0}
}

func (x *AddAssetRequest) GetAssetHash() string {
	if x != nil {
		return x.AssetHash
	}
	return ""
}

func (x *AddAssetRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

type AddAssetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddAssetReply) Reset() {
	*x = AddAssetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAssetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAssetReply) ProtoMessage() {}

func (x *AddAssetReply) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAssetReply.ProtoReflect.Descriptor instead.
func (*AddAssetReply) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{1}
}

func (x *AddAssetReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ListAssetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListAssetsRequest) Reset() {
	*x = ListAssetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsRequest) ProtoMessage() {}

func (x *ListAssetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsRequest.ProtoReflect.Descriptor instead.
func (*ListAssetsRequest) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{2}
}

type ListAssetsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetHash []string `protobuf:"bytes,1,rep,name=asset_hash,json=assetHash,proto3" json:"asset_hash,omitempty"` // asset hash accepted as payout
}

func (x *ListAssetsReply) Reset() {
	*x = ListAssetsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAssetsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAssetsReply) ProtoMessage() {}

func (x *ListAssetsReply) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAssetsReply.ProtoReflect.Descriptor instead.
func (*ListAssetsReply) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{3}
}

func (x *ListAssetsReply) GetAssetHash() []string {
	if x != nil {
		return x.AssetHash
	}
	return nil
}

type TopupWithAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetHash       string `protobuf:"bytes,1,opt,name=asset_hash,json=assetHash,proto3" json:"asset_hash,omitempty"`                      // asset hash to be used for payout
	FeeAmount       uint64 `protobuf:"varint,2,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`                     // amount in satoshis of bitcoin needed to cover the fees. It's up to the client to estimate and ask the precise amount
	MillisatPerByte uint64 `protobuf:"varint,3,opt,name=millisat_per_byte,json=millisatPerByte,proto3" json:"millisat_per_byte,omitempty"` // how many millisatoshi per byte we want to spend. ie. 0.1 sat/byte is 100
}

func (x *TopupWithAssetRequest) Reset() {
	*x = TopupWithAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopupWithAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupWithAssetRequest) ProtoMessage() {}

func (x *TopupWithAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupWithAssetRequest.ProtoReflect.Descriptor instead.
func (*TopupWithAssetRequest) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{4}
}

func (x *TopupWithAssetRequest) GetAssetHash() string {
	if x != nil {
		return x.AssetHash
	}
	return ""
}

func (x *TopupWithAssetRequest) GetFeeAmount() uint64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *TopupWithAssetRequest) GetMillisatPerByte() uint64 {
	if x != nil {
		return x.MillisatPerByte
	}
	return 0
}

type TopupWithAssetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topup  *Topup `protobuf:"bytes,1,opt,name=topup,proto3" json:"topup,omitempty"`
	Expiry uint64 `protobuf:"varint,2,opt,name=expiry,proto3" json:"expiry,omitempty"` // the unix timestamp after wich the locked LBTC input will provably be double-spent
}

func (x *TopupWithAssetReply) Reset() {
	*x = TopupWithAssetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopupWithAssetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupWithAssetReply) ProtoMessage() {}

func (x *TopupWithAssetReply) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupWithAssetReply.ProtoReflect.Descriptor instead.
func (*TopupWithAssetReply) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{5}
}

func (x *TopupWithAssetReply) GetTopup() *Topup {
	if x != nil {
		return x.Topup
	}
	return nil
}

func (x *TopupWithAssetReply) GetExpiry() uint64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

type ListTopupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetHash string `protobuf:"bytes,1,opt,name=asset_hash,json=assetHash,proto3" json:"asset_hash,omitempty"` // the asset hash to filetr the topups. If empty, all topups of all assets will be returned
}

func (x *ListTopupsRequest) Reset() {
	*x = ListTopupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopupsRequest) ProtoMessage() {}

func (x *ListTopupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopupsRequest.ProtoReflect.Descriptor instead.
func (*ListTopupsRequest) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{6}
}

func (x *ListTopupsRequest) GetAssetHash() string {
	if x != nil {
		return x.AssetHash
	}
	return ""
}

type ListTopupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topups []*TopupInfo `protobuf:"bytes,1,rep,name=topups,proto3" json:"topups,omitempty"`
}

func (x *ListTopupsReply) Reset() {
	*x = ListTopupsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTopupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTopupsReply) ProtoMessage() {}

func (x *ListTopupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTopupsReply.ProtoReflect.Descriptor instead.
func (*ListTopupsReply) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{7}
}

func (x *ListTopupsReply) GetTopups() []*TopupInfo {
	if x != nil {
		return x.Topups
	}
	return nil
}

type ChangeSpreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasisPoint int32 `protobuf:"varint,1,opt,name=basis_point,json=basisPoint,proto3" json:"basis_point,omitempty"`
}

func (x *ChangeSpreadRequest) Reset() {
	*x = ChangeSpreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpreadRequest) ProtoMessage() {}

func (x *ChangeSpreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpreadRequest.ProtoReflect.Descriptor instead.
func (*ChangeSpreadRequest) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeSpreadRequest) GetBasisPoint() int32 {
	if x != nil {
		return x.BasisPoint
	}
	return 0
}

type ChangeSpreadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeSpreadReply) Reset() {
	*x = ChangeSpreadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSpreadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSpreadReply) ProtoMessage() {}

func (x *ChangeSpreadReply) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSpreadReply.ProtoReflect.Descriptor instead.
func (*ChangeSpreadReply) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{9}
}

type Topup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopupId     string  `protobuf:"bytes,1,opt,name=topup_id,json=topupId,proto3" json:"topup_id,omitempty"`              //random identifier of the currer topup
	Partial     string  `protobuf:"bytes,2,opt,name=partial,proto3" json:"partial,omitempty"`                             // PSET signed with SIGHASH_ALL | ANYONECANPAY
	AssetHash   string  `protobuf:"bytes,3,opt,name=asset_hash,json=assetHash,proto3" json:"asset_hash,omitempty"`        // the asset hash used as payout for bitcoin fees
	AssetAmount uint64  `protobuf:"varint,4,opt,name=asset_amount,json=assetAmount,proto3" json:"asset_amount,omitempty"` // the asset denominated amount expressed in satoshis to be used as payout. It includes also the spread as taxi service fee
	AssetPrice  float32 `protobuf:"fixed32,5,opt,name=asset_price,json=assetPrice,proto3" json:"asset_price,omitempty"`   // the price of bitcoin expressed in asset
	BasisPoint  int32   `protobuf:"varint,6,opt,name=basis_point,json=basisPoint,proto3" json:"basis_point,omitempty"`    // the spread expressed in basis point on top the amount needed to repay for bitcoin fees
}

func (x *Topup) Reset() {
	*x = Topup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topup) ProtoMessage() {}

func (x *Topup) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topup.ProtoReflect.Descriptor instead.
func (*Topup) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{10}
}

func (x *Topup) GetTopupId() string {
	if x != nil {
		return x.TopupId
	}
	return ""
}

func (x *Topup) GetPartial() string {
	if x != nil {
		return x.Partial
	}
	return ""
}

func (x *Topup) GetAssetHash() string {
	if x != nil {
		return x.AssetHash
	}
	return ""
}

func (x *Topup) GetAssetAmount() uint64 {
	if x != nil {
		return x.AssetAmount
	}
	return 0
}

func (x *Topup) GetAssetPrice() float32 {
	if x != nil {
		return x.AssetPrice
	}
	return 0
}

func (x *Topup) GetBasisPoint() int32 {
	if x != nil {
		return x.BasisPoint
	}
	return 0
}

type TopupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topup           *Topup           `protobuf:"bytes,1,opt,name=topup,proto3" json:"topup,omitempty"`
	Status          TopupInfo_Status `protobuf:"varint,2,opt,name=status,proto3,enum=TopupInfo_Status" json:"status,omitempty"`
	FeeAmount       uint64           `protobuf:"varint,3,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`                     // amount in satoshis of bitcoin needed to cover the fees
	MillisatPerByte uint64           `protobuf:"varint,4,opt,name=millisat_per_byte,json=millisatPerByte,proto3" json:"millisat_per_byte,omitempty"` // how many millisatoshi per byte we want to spend. ie. 0.1 sat/byte is 100
	Times           *Timestamps      `protobuf:"bytes,5,opt,name=times,proto3" json:"times,omitempty"`                                               // the timestamps of each status change
}

func (x *TopupInfo) Reset() {
	*x = TopupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopupInfo) ProtoMessage() {}

func (x *TopupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopupInfo.ProtoReflect.Descriptor instead.
func (*TopupInfo) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{11}
}

func (x *TopupInfo) GetTopup() *Topup {
	if x != nil {
		return x.Topup
	}
	return nil
}

func (x *TopupInfo) GetStatus() TopupInfo_Status {
	if x != nil {
		return x.Status
	}
	return TopupInfo_REQUESTED
}

func (x *TopupInfo) GetFeeAmount() uint64 {
	if x != nil {
		return x.FeeAmount
	}
	return 0
}

func (x *TopupInfo) GetMillisatPerByte() uint64 {
	if x != nil {
		return x.MillisatPerByte
	}
	return 0
}

func (x *TopupInfo) GetTimes() *Timestamps {
	if x != nil {
		return x.Times
	}
	return nil
}

type Timestamps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestedAt uint64 `protobuf:"varint,1,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"` // the unix timestamp of when the taxi received the request of a topup from a client
	CompletedAt uint64 `protobuf:"varint,2,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"` // the unix timestamp of when the taxi completed the topup and responded to client
	SettledAt   uint64 `protobuf:"varint,3,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`       // the unix timestamp of the block in wich the topup is included in the chain.
	ExpiredAt   uint64 `protobuf:"varint,9,opt,name=expired_at,json=expiredAt,proto3" json:"expired_at,omitempty"`       // the unix timestamp after wich the locked bitcoin input could have been double-spent (if any)
}

func (x *Timestamps) Reset() {
	*x = Timestamps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taxi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timestamps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timestamps) ProtoMessage() {}

func (x *Timestamps) ProtoReflect() protoreflect.Message {
	mi := &file_taxi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timestamps.ProtoReflect.Descriptor instead.
func (*Timestamps) Descriptor() ([]byte, []int) {
	return file_taxi_proto_rawDescGZIP(), []int{12}
}

func (x *Timestamps) GetRequestedAt() uint64 {
	if x != nil {
		return x.RequestedAt
	}
	return 0
}

func (x *Timestamps) GetCompletedAt() uint64 {
	if x != nil {
		return x.CompletedAt
	}
	return 0
}

func (x *Timestamps) GetSettledAt() uint64 {
	if x != nil {
		return x.SettledAt
	}
	return 0
}

func (x *Timestamps) GetExpiredAt() uint64 {
	if x != nil {
		return x.ExpiredAt
	}
	return 0
}

var File_taxi_proto protoreflect.FileDescriptor

var file_taxi_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x61, 0x78, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x54, 0x6f, 0x70,
	0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x69, 0x6c,
	0x6c, 0x69, 0x73, 0x61, 0x74, 0x50, 0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x22, 0x4b, 0x0a, 0x13,
	0x54, 0x6f, 0x70, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x75,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x11, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x35, 0x0a,
	0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x22, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x6f,
	0x70, 0x75, 0x70, 0x73, 0x22, 0x36, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x13, 0x0a, 0x11,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0xc0, 0x01, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x70, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x75, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0xf7, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x75, 0x70,
	0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x65, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x66, 0x65, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x61, 0x74, 0x50,
	0x65, 0x72, 0x42, 0x79, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x54, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x22, 0x90,
	0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x41,
	0x74, 0x32, 0x7a, 0x0a, 0x04, 0x54, 0x61, 0x78, 0x69, 0x12, 0x32, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a,
	0x0e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x57, 0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x54, 0x6f, 0x70, 0x75, 0x70, 0x57,
	0x69, 0x74, 0x68, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xa3, 0x01,
	0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x6f, 0x70, 0x75, 0x70, 0x73, 0x12, 0x12, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x70, 0x75,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x6f, 0x70, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x12, 0x14, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x12, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x70, 0x72, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x10, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x76, 0x75, 0x6c, 0x70, 0x65, 0x6d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x2f, 0x74, 0x61, 0x78, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_taxi_proto_rawDescOnce sync.Once
	file_taxi_proto_rawDescData = file_taxi_proto_rawDesc
)

func file_taxi_proto_rawDescGZIP() []byte {
	file_taxi_proto_rawDescOnce.Do(func() {
		file_taxi_proto_rawDescData = protoimpl.X.CompressGZIP(file_taxi_proto_rawDescData)
	})
	return file_taxi_proto_rawDescData
}

var file_taxi_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_taxi_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_taxi_proto_goTypes = []interface{}{
	(TopupInfo_Status)(0),         // 0: TopupInfo.Status
	(*AddAssetRequest)(nil),       // 1: AddAssetRequest
	(*AddAssetReply)(nil),         // 2: AddAssetReply
	(*ListAssetsRequest)(nil),     // 3: ListAssetsRequest
	(*ListAssetsReply)(nil),       // 4: ListAssetsReply
	(*TopupWithAssetRequest)(nil), // 5: TopupWithAssetRequest
	(*TopupWithAssetReply)(nil),   // 6: TopupWithAssetReply
	(*ListTopupsRequest)(nil),     // 7: ListTopupsRequest
	(*ListTopupsReply)(nil),       // 8: ListTopupsReply
	(*ChangeSpreadRequest)(nil),   // 9: ChangeSpreadRequest
	(*ChangeSpreadReply)(nil),     // 10: ChangeSpreadReply
	(*Topup)(nil),                 // 11: Topup
	(*TopupInfo)(nil),             // 12: TopupInfo
	(*Timestamps)(nil),            // 13: Timestamps
}
var file_taxi_proto_depIdxs = []int32{
	11, // 0: TopupWithAssetReply.topup:type_name -> Topup
	12, // 1: ListTopupsReply.topups:type_name -> TopupInfo
	11, // 2: TopupInfo.topup:type_name -> Topup
	0,  // 3: TopupInfo.status:type_name -> TopupInfo.Status
	13, // 4: TopupInfo.times:type_name -> Timestamps
	3,  // 5: Taxi.ListAssets:input_type -> ListAssetsRequest
	5,  // 6: Taxi.TopupWithAsset:input_type -> TopupWithAssetRequest
	7,  // 7: Admin.ListTopups:input_type -> ListTopupsRequest
	9,  // 8: Admin.ChangeSpread:input_type -> ChangeSpreadRequest
	1,  // 9: Admin.AddAsset:input_type -> AddAssetRequest
	4,  // 10: Taxi.ListAssets:output_type -> ListAssetsReply
	6,  // 11: Taxi.TopupWithAsset:output_type -> TopupWithAssetReply
	8,  // 12: Admin.ListTopups:output_type -> ListTopupsReply
	10, // 13: Admin.ChangeSpread:output_type -> ChangeSpreadReply
	2,  // 14: Admin.AddAsset:output_type -> AddAssetReply
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_taxi_proto_init() }
func file_taxi_proto_init() {
	if File_taxi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_taxi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAssetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAssetsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopupWithAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopupWithAssetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTopupsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSpreadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taxi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timestamps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_taxi_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_taxi_proto_goTypes,
		DependencyIndexes: file_taxi_proto_depIdxs,
		EnumInfos:         file_taxi_proto_enumTypes,
		MessageInfos:      file_taxi_proto_msgTypes,
	}.Build()
	File_taxi_proto = out.File
	file_taxi_proto_rawDesc = nil
	file_taxi_proto_goTypes = nil
	file_taxi_proto_depIdxs = nil
}
